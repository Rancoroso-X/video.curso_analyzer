#!/usr/bin/env python3
"""Teste r√°pido de funcionamento."""


def test_basic():
    try:
        import streamlit as st
        import openai
        import pandas as pd
        import numpy as np
        print("‚úÖ Imports b√°sicos OK")
        return True
    except Exception as e:
        print(f"‚ùå Erro nos imports b√°sicos: {e}")
        return False


def test_optional():
    optional_ok = 0
    total_optional = 0

    modules = [
        ("moviepy.editor", "MoviePy"),
        ("ffmpeg", "FFmpeg-python"),
        ("whisper", "Whisper"),
        ("fitz", "PyMuPDF")
    ]

    for module, name in modules:
        total_optional += 1
        try:
            __import__(module)
            print(f"‚úÖ {name} OK")
            optional_ok += 1
        except ImportError:
            print(f"‚ö†Ô∏è {name} n√£o dispon√≠vel")

    print(f"üìä M√≥dulos opcionais: {optional_ok}/{total_optional}")
    return optional_ok > 0


def test_app_imports():
    """Testa imports espec√≠ficos da aplica√ß√£o."""
    try:
        from transcriber import transcrever_videos
        print("‚úÖ transcriber OK")
    except Exception as e:
        print(f"‚ùå transcriber erro: {e}")
        return False

    try:
        from config import OPENAI_API_KEY
        print("‚úÖ config OK")
    except Exception as e:
        print(f"‚ùå config erro: {e}")
        return False

    try:
        from analyzer import mapear_modulos
        print("‚úÖ analyzer OK")
    except Exception as e:
        print(f"‚ùå analyzer erro: {e}")
        return False

    return True


if __name__ == "__main__":
    print("üß™ TESTE R√ÅPIDO - NASCO v4.0")
    print("=" * 40)

    basic_ok = test_basic()
    optional_ok = test_optional()
    app_ok = test_app_imports()

    print("\n" + "=" * 40)
    if basic_ok and app_ok:
        print("üéâ Sistema b√°sico funcionando!")
        print("Execute: streamlit run app.py")
    else:
        print("‚ùå Problemas nos m√≥dulos b√°sicos")
        print("Execute novamente: python fix_dependencies.py")
